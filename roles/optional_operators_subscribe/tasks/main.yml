---
- name: "Run optional_operators_subscribe"
  block:
  - name: "Set facts for the Operator groups"
    set_fact:
      OO_INDEX: "{{ OO_INDEX }}"
      OO_PACKAGE: "{{ OO_PACKAGE }}"
      OO_CHANNEL: "{{ OO_CHANNEL }}"
      OO_INSTALL_NAMESPACE: "{{ OO_INSTALL_NAMESPACE | default('') }}"
      OO_TARGET_NAMESPACES: "{{ OO_TARGET_NAMESPACES | default('') }}"
      ARTIFACT_DIR: "{{ ARTIFACT_DIR }}"
      finished_json_contents:
        passed: false
        timestamp: "{{ ansible_date_time.iso8601_basic_short }}"

  # incase of failure the following task fails
  # we will be ignoring errors to display the results
  - name: "Generate namespace name if not provided"
    shell: "{{ lookup('template', 'optional-operators-subscribe-commands.sh') }}"
    register: shell_script_output
    environment:
      KUBECONFIG: "{{ kubeconfig_path }}"
      OO_INDEX: "{{ OO_INDEX }}"
      OO_PACKAGE: "{{ OO_PACKAGE }}"
      OO_CHANNEL: "{{ OO_CHANNEL }}"
      OO_INSTALL_NAMESPACE: "{{ OO_INSTALL_NAMESPACE }}"
      OO_TARGET_NAMESPACES: "{{ OO_TARGET_NAMESPACES }}"
      ARTIFACT_DIR: "{{ ARTIFACT_DIR }}"
      SHARED_DIR: "{{ ARTIFACT_DIR }}"
    ignore_errors: true

  # incase of success/failure the output is being displayed the
  - name: "Debug"
    debug:
      msg: "{{ shell_script_output.stdout_lines }}"

  - name: "Set finished_json_contents in case of success"
    set_fact:
      finished_json_contents: "{{ finished_json_contents | combine(new_item, recursive=true) }}"
    vars:
      new_item: {'passed': true}
    with_dict: "{{ finished_json_contents }}"
    when: shell_script_output.rc == 0

  always:
    - name: "Store the result of the shell script output to build-log.txt"
      copy:
        dest: "{{ ARTIFACT_DIR }}/build-log.txt"
        content: "{{ shell_script_output.stdout }}"
        mode: 0644

    - name: "Store the result in a JSON file"
      copy:
        dest: "{{ ARTIFACT_DIR }}/optional_operator_subscribe.json"
        content: "{{ shell_script_output }}"
        mode: 0644

    - name: "Store the finished.json"
      copy:
        dest: "{{ ARTIFACT_DIR }}/finished.json"
        content: "{{ finished_json_contents }}"
        mode: 0644
