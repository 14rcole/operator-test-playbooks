---
# # In order for this role to work, add the following task to your playbook
# # immediately before calling the deployment role.
# - name: "Set the deployment start time"
#   shell: "date -u '+%Y-%m-%dT%H:%M:%SZ'"
#   register: deployment_start_time
# 
# The above shell command gets the date in the same format passed by openshift
# in the `oc get events` command below.  The below command gets all images
# pulled to the cluster.  This includes images that were not pulled as part of
# the deployment.  deployment_start time is used in the parse_image_names file
# to filter out images pulled before the deployment started.  Since this role
# should be run immediately after the deployment, there should be no need to filter
# images pulled after the deployment.

- name: "Set the output CSV file location"
  set_fact:
    image_pull_events: "{{ work_dir }}/image_pull_events.csv"
  when: image_pull_events is not defined

- name: "Collect the image pull events from the cluster in a CSV format"
  shell: "{{ lookup('file', 'optional-operators-cvp-common-test-commands.sh') }}"
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
    ARTIFACT_DIR: "{{ work_dir }}"
  when: collect_pull_events|bool

- name: "Read the resulting file and split it by lines"
  set_fact:
    image_pull_events_lines: "{{ lookup('file', image_pull_events).splitlines() }}"

- name: "Filter the list of images in the image_pull_events.csv by timestamp"
  include_tasks: parse_image_names.yml
  with_items:
    - "{{ image_pull_events_lines }}"

- name: "Print filtered images"
  debug:
    msg: "pulled images: {{ pulled_images }}"

- name: "Save images to an output json file"
  copy:
    content: "{{ pulled_images | to_json }}"
    dest: "{{ events_file_path }}"
  delegate_to: localhost
